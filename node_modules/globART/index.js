"use strict";

var globART = function ( folder )  {
 
  
  	var self = Object.create( module, {});
  	
  	self.graphics = []; // ARRAY OF ALL THE GRAPHIC ASSETS THAT NEED TO BE LOADED

  	var fs 	= require('fs');
  	var S = require( 'string');

  	function trace( message ){
  		console.log( message );
  	}

   self.searchRoot = function( root ){

   		var fileList = fs.readdirSync( root );
      	var max = fileList.length;

      	self.removeJS( fileList );
     	self.searchDir( root, fileList );
  }

    self.searchDir = function( root, list ){

    	var max = list.length;
    	var url;
    	var frameList;

    	for ( var i = max - 1; i >= 0 ; i-- ){
    		var dir = list[i];
    		url = root +  '/' + dir;
    		var rockList = fs.readdirSync( url );
    		self.removeJS( rockList );
    		var frameData = self.searchRock( rockList, url );
    		self.aquireAllGraphics( frameData );
    	}

    	var max = self.graphics.length;
    	for (var i = self.graphics.length - 1; i >= 0; i--) {
    		var file = self.graphics[i];
    	};
    }

    self.aquireAllGraphics = function( frameData ){

    	for (var key in frameData) {
  				
  				if ( frameData.hasOwnProperty(key)) {
    			
    			var data = frameData[key];
    			var max = data.length
    			for ( var i = 0; i < max; i++ ){

    			var file = data[i];
    			self.graphics.push( file ) ;	
    		}
  			}
			}
    }

    self.searchRock = function( rockList, root ){

    	var max = rockList.length;
    	var rockFile;
    	var frameData;

    	for (var i = 0; i < max; i++) {
    		var rock = rockList[i];
    		var newSRC = root + '/' + rock;
    		var toonList = fs.readdirSync( newSRC );
    		
    		rockFile = self.removeJS( toonList )[0];
    		frameData = self.searchToon( toonList, newSRC, rockFile );
    		};

    	var rockSRC 	= newSRC + '/' + rockFile;
		var rock 		= require( '../.' + rockSRC )();
	
		for (var i = rock.toonList.length - 1; i >= 0; i--) {
			var toon = rock.toonList[i];

			if ( toon.id == null 		) continue;
			if ( toon.src == null    	) toon.src = toon.id;
			if ( toon.frames == null 	) {
				if( frameData[ toon.src] != null  ) toon.frames = frameData[ toon.src]
				continue;
			}

			//self.replaceFramesWithURLs( toon.frames, frameData[toon.src] );// TURN THIS OFF FOR NOW WILL NEED LATR
		};

		return frameData;

		// now you needs to build out the frames
		// populate the frames with the urls of the images
    }

    self.replaceFramesWithURLs = function( frames , urls ){

    		for (var i = frames.length - 1; i >= 0; i--) {
    			var frame = frames[i];
    			frames[ i ] = urls[ frame - 1 ];// the frames are based on the idea of 1
    			trace("what does the frame look like " + frames[ i ] );
    		};
    }

    self.searchToon = function( toonList, dir, rockFile ){


    	var max 	= toonList.length;
    	var data 	= {};

    	for (var i = 0; i < max; i++) {
    		var toon = toonList[i];
    		var newSRC = dir + '/' + toon;

    		//var res = str.substring(1, 4);

    		//i need you to strip out the ./app
    		var removeMe 	= './app'
    		var startRemove = newSRC.indexOf( removeMe);
    		var endRemove 	= removeMe.length;
    		var want 		= newSRC.substring( startRemove + endRemove, newSRC.length ); // you may need a period here
    		var frameList 	= fs.readdirSync( newSRC );
    		var frames 		= self.removeNonImageItems( frameList, want );
    		data[ toon ] 	= frames;
    		};

    	return data;



    	


    	//trace(" do you have a rock " + rock.toonList );

    	//var rock = require( rockSRC );
    	//trace("do you have a rock " + rock );

    	//var rock = fs.readFileSync( rockSRC, 'UTF-8');
    	//

    	//var seekStart 	= 'self.toonList =';
    	//var seekEnd		= ';';

    	//var need = S(rock).between( seekStart,  seekEnd ).s;
    	//var str = S(need).collapseWhitespace().s; 

    	//eval( str );
    	//var array = JSON.parse( str );

    	//var list = JSON.parse( need );

 
    	//var startPos = rock.indexOf( seek );


    	//console.log( "what i need iz " + str);


    	//console.log("what does the rock src look like " + rockSRC );

    }

    self.removeNonImageItems = function( fileList, dir ){

    	var max 		= fileList.length;
    	var frames  	= [];

      	for ( var i = max - 1; i >= 0; i-- ){
      	
      	var file = fileList[ i ];
      
      	var check = file.split(".");
        if ( check[1] == 'png') frames.push( dir + '/' + file );
     	};

     	return frames;


    } 

    self.removeJS = function( fileList ){
    	var max = fileList.length;
    	var js = [];

      	for ( var i = max - 1; i >= 0; i-- ){
      	
      	var file = fileList[ i ];
      	var processed;
      	
      	var jsCheck = file.split(".");
       	if ( jsCheck.length > 1 )js.push( fileList.splice( i , 1)[0] );
     	};

     	return js;

    }

  self.searchRoot('./app/globs' );

  return self; 
};

exports = module.exports = globART;